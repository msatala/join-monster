{"version":3,"sources":["../../../src/stringifiers/dialects/pg.js"],"names":["dialect","module","exports","name","quote","str","compositeKey","parent","keys","map","key","join","handleJoinedOneToManyPaginated","node","context","tables","joinCondition","pagingWhereConditions","sqlJoin","as","args","where","push","sortKey","limit","order","whereCondition","whereAddendum","joinType","orderBy","offset","handleBatchedManyToManyPaginated","batchScope","thisKeyOperand","junction","sqlBatch","thisKey","parentKey","tempTable","val","lateralJoinCondition","lateralJoinOptions","extraJoin","condition","sqlTable","handleJoinedManyToManyPaginated","joinCondition1","joinCondition2","sqlJoins","handlePaginationAtRoot","handleBatchedOneToManyPaginated"],"mappings":"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","sourcesContent":["import {\n  keysetPagingSelect,\n  offsetPagingSelect,\n  interpretForOffsetPaging,\n  interpretForKeysetPaging,\n  generateCastExpressionFromValueType\n} from '../shared'\n\nconst dialect = (module.exports = {\n  name: 'pg',\n\n  quote(str) {\n    return `\"${str}\"`\n  },\n\n  compositeKey(parent, keys) {\n    keys = keys.map(key => `\"${parent}\".\"${key}\"`)\n    return `NULLIF(CONCAT(${keys.join(', ')}), '')`\n  },\n\n  handleJoinedOneToManyPaginated: async function(\n    parent,\n    node,\n    context,\n    tables,\n    joinCondition\n  ) {\n    const pagingWhereConditions = [\n      await node.sqlJoin(\n        `\"${parent.as}\"`,\n        `\"${node.as}\"`,\n        node.args || {},\n        context,\n        node\n      )\n    ]\n    if (node.where) {\n      pagingWhereConditions.push(\n        await node.where(`\"${node.as}\"`, node.args || {}, context, node)\n      )\n    }\n\n    // which type of pagination are they using?\n    if (node.sortKey) {\n      const {\n        limit,\n        order,\n        whereCondition: whereAddendum\n      } = interpretForKeysetPaging(node, dialect)\n      pagingWhereConditions.push(whereAddendum)\n      tables.push(\n        keysetPagingSelect(\n          node.name,\n          pagingWhereConditions,\n          order,\n          limit,\n          node.as,\n          { joinCondition, joinType: 'LEFT' }\n        )\n      )\n    } else if (node.orderBy) {\n      const { limit, offset, order } = interpretForOffsetPaging(node, dialect)\n      tables.push(\n        offsetPagingSelect(\n          node.name,\n          pagingWhereConditions,\n          order,\n          limit,\n          offset,\n          node.as,\n          {\n            joinCondition,\n            joinType: 'LEFT'\n          }\n        )\n      )\n    }\n  },\n\n  handleBatchedManyToManyPaginated: async function(\n    parent,\n    node,\n    context,\n    tables,\n    batchScope,\n    joinCondition\n  ) {\n    const thisKeyOperand = generateCastExpressionFromValueType(\n      `\"${node.junction.as}\".\"${node.junction.sqlBatch.thisKey.name}\"`,\n      batchScope[0]\n    )\n    const pagingWhereConditions = [\n      `${thisKeyOperand} = temp.\"${node.junction.sqlBatch.parentKey.name}\"`\n    ]\n    if (node.junction.where) {\n      pagingWhereConditions.push(\n        await node.junction.where(\n          `\"${node.junction.as}\"`,\n          node.args || {},\n          context,\n          node\n        )\n      )\n    }\n    if (node.where) {\n      pagingWhereConditions.push(\n        await node.where(`\"${node.as}\"`, node.args || {}, context, node)\n      )\n    }\n\n    const tempTable = `FROM (VALUES ${batchScope.map(\n      val => `(${val})`\n    )}) temp(\"${node.junction.sqlBatch.parentKey.name}\")`\n    tables.push(tempTable)\n    const lateralJoinCondition = `${thisKeyOperand} = temp.\"${node.junction.sqlBatch.parentKey.name}\"`\n\n    const lateralJoinOptions = {\n      joinCondition: lateralJoinCondition,\n      joinType: 'LEFT'\n    }\n    if (node.where || node.orderBy) {\n      lateralJoinOptions.extraJoin = {\n        name: node.name,\n        as: node.as,\n        condition: joinCondition\n      }\n    }\n    if (node.sortKey || node.junction.sortKey) {\n      const {\n        limit,\n        order,\n        whereCondition: whereAddendum\n      } = interpretForKeysetPaging(node, dialect)\n      pagingWhereConditions.push(whereAddendum)\n      tables.push(\n        keysetPagingSelect(\n          node.junction.sqlTable,\n          pagingWhereConditions,\n          order,\n          limit,\n          node.junction.as,\n          lateralJoinOptions\n        )\n      )\n    } else if (node.orderBy || node.junction.orderBy) {\n      const { limit, offset, order } = interpretForOffsetPaging(node, dialect)\n      tables.push(\n        offsetPagingSelect(\n          node.junction.sqlTable,\n          pagingWhereConditions,\n          order,\n          limit,\n          offset,\n          node.junction.as,\n          lateralJoinOptions\n        )\n      )\n    }\n    tables.push(`LEFT JOIN ${node.name} AS \"${node.as}\" ON ${joinCondition}`)\n  },\n\n  handleJoinedManyToManyPaginated: async function(\n    parent,\n    node,\n    context,\n    tables,\n    joinCondition1,\n    joinCondition2\n  ) {\n    const pagingWhereConditions = [\n      await node.junction.sqlJoins[0](\n        `\"${parent.as}\"`,\n        `\"${node.junction.as}\"`,\n        node.args || {},\n        context,\n        node\n      )\n    ]\n    if (node.junction.where) {\n      pagingWhereConditions.push(\n        await node.junction.where(\n          `\"${node.junction.as}\"`,\n          node.args || {},\n          context,\n          node\n        )\n      )\n    }\n    if (node.where) {\n      pagingWhereConditions.push(\n        await node.where(`\"${node.as}\"`, node.args || {}, context, node)\n      )\n    }\n\n    const lateralJoinOptions = {\n      joinCondition: joinCondition1,\n      joinType: 'LEFT'\n    }\n    if (node.where || node.orderBy) {\n      lateralJoinOptions.extraJoin = {\n        name: node.name,\n        as: node.as,\n        condition: joinCondition2\n      }\n    }\n    if (node.sortKey || node.junction.sortKey) {\n      const {\n        limit,\n        order,\n        whereCondition: whereAddendum\n      } = interpretForKeysetPaging(node, dialect)\n      pagingWhereConditions.push(whereAddendum)\n      tables.push(\n        keysetPagingSelect(\n          node.junction.sqlTable,\n          pagingWhereConditions,\n          order,\n          limit,\n          node.junction.as,\n          lateralJoinOptions\n        )\n      )\n    } else if (node.orderBy || node.junction.orderBy) {\n      const { limit, offset, order } = interpretForOffsetPaging(node, dialect)\n      tables.push(\n        offsetPagingSelect(\n          node.junction.sqlTable,\n          pagingWhereConditions,\n          order,\n          limit,\n          offset,\n          node.junction.as,\n          lateralJoinOptions\n        )\n      )\n    }\n  },\n\n  handlePaginationAtRoot: async function(parent, node, context, tables) {\n    const pagingWhereConditions = []\n    if (node.sortKey) {\n      const {\n        limit,\n        order,\n        whereCondition: whereAddendum\n      } = interpretForKeysetPaging(node, dialect)\n      pagingWhereConditions.push(whereAddendum)\n      if (node.where) {\n        pagingWhereConditions.push(\n          await node.where(`\"${node.as}\"`, node.args || {}, context, node)\n        )\n      }\n      tables.push(\n        keysetPagingSelect(\n          node.name,\n          pagingWhereConditions,\n          order,\n          limit,\n          node.as\n        )\n      )\n    } else if (node.orderBy) {\n      const { limit, offset, order } = interpretForOffsetPaging(node, dialect)\n      if (node.where) {\n        pagingWhereConditions.push(\n          await node.where(`\"${node.as}\"`, node.args || {}, context, node)\n        )\n      }\n      tables.push(\n        offsetPagingSelect(\n          node.name,\n          pagingWhereConditions,\n          order,\n          limit,\n          offset,\n          node.as\n        )\n      )\n    }\n  },\n\n  handleBatchedOneToManyPaginated: async function(\n    parent,\n    node,\n    context,\n    tables,\n    batchScope\n  ) {\n    const thisKeyOperand = generateCastExpressionFromValueType(\n      `\"${node.as}\".\"${node.sqlBatch.thisKey.name}\"`,\n      batchScope[0]\n    )\n    const pagingWhereConditions = [\n      `${thisKeyOperand} = temp.\"${node.sqlBatch.parentKey.name}\"`\n    ]\n    if (node.where) {\n      pagingWhereConditions.push(\n        await node.where(`\"${node.as}\"`, node.args || {}, context, node)\n      )\n    }\n    const tempTable = `FROM (VALUES ${batchScope.map(\n      val => `(${val})`\n    )}) temp(\"${node.sqlBatch.parentKey.name}\")`\n    tables.push(tempTable)\n    const lateralJoinCondition = `${thisKeyOperand} = temp.\"${node.sqlBatch.parentKey.name}\"`\n    if (node.sortKey) {\n      const {\n        limit,\n        order,\n        whereCondition: whereAddendum\n      } = interpretForKeysetPaging(node, dialect)\n      pagingWhereConditions.push(whereAddendum)\n      tables.push(\n        keysetPagingSelect(\n          node.name,\n          pagingWhereConditions,\n          order,\n          limit,\n          node.as,\n          { joinCondition: lateralJoinCondition }\n        )\n      )\n    } else if (node.orderBy) {\n      const { limit, offset, order } = interpretForOffsetPaging(node, dialect)\n      tables.push(\n        offsetPagingSelect(\n          node.name,\n          pagingWhereConditions,\n          order,\n          limit,\n          offset,\n          node.as,\n          {\n            joinCondition: lateralJoinCondition\n          }\n        )\n      )\n    }\n  }\n})\n"],"file":"pg.js"}